/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define AL1 0
#define AL2 1
#define SM1 2
#define SM2 3
#define NUM 4
#define SYS 5
#define FUN 6
#define AL2U 7

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
    };
   
    
    keymap {
         compatible = "zmk,keymap";

         AL1 {
                        bindings = <
   &none  &kp ESC   &mt LCTL L   &mt LALT G  &mt LGUI D  &none                                  &none   &mt RGUI H  &mt LALT U   &mt RCTL C  &kp BSPC  &none
   &none  &mt LEFT_SHIFT A  &mt LCTRL R  &mt LEFT_ALT S  &mt LEFT_COMMAND T  &none              &none   &mt RCMD N  &mt RIGHT_ALT E  &mt RIGHT_CONTROL I  &mt RIGHT_SHIFT O &sl 4
   &none  &none   &none   &none   &none   &none                                                 &none   &none   &none   &none  &none  &none 
   &none  &mt LC(LS(LALT)) SPC  &sk LSHIFT                                                      &kp RET &kp BSPC &none 
                        >;
                };
                
         AL2 {
                        bindings = <
   &kp ESC &kp ESC  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE          &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE &kp BSPC
   &bt BT_CLR &kp UNDERSCORE &kp ASTERISK &kp EQUAL &kp MINUS &kp DOLLAR                        &kp HASH  &sk RIGHT_GUI  &sk RIGHT_ALT  &sk RIGHT_CONTROL &sk RIGHT_SHIFT &trans
   &bt BT_NXT &kp PIPE &kp PLUS &kp AT_SIGN &kp FSLH &kp PERCENT                                &kp MINUS &kp QUESTION &kp EXCLAMATION  &kp BACKSLASH &kp AMPERSAND &trans
   &kp ESC &mt LC(LS(LALT)) SPC  &sk LSHIFT                                                     &kp RET &kp BSPC &sl 4
                        >;
                };

         SM1 {
                        bindings = <
   &kp ESC   &kp ESCAPE  &kp TAB &none &none &none                                              &none &none &none &none &kp DEL &kp BSPC
   &kp LCTRL &sk LEFT_SHIFT &sk LEFT_CONTROL &sk LEFT_ALT &sk LEFT_GUI &none                   &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp BACKSPACE
   &kp LSHFT &trans   &trans &trans   &trans   &trans                                          &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE &kp TILDE
   &kp ESC &mt LC(LS(LALT)) SPC  &sk LSHIFT                                                     &kp RET &kp BSPC &sl 4
                        >;
                };
        
         SM2 {
                        bindings = <
   &kp TAB &kp NUMBER_7 &kp NUMBER_5 &kp NUMBER_3 &kp NUMBER_1 &kp NUMBER_9                    &kp NUMBER_8 &kp NUMBER_0 &kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_6 &kp BSPC
   &kp LCTRL &sk LEFT_SHIFT &sk LEFT_CONTROL &sk LEFT_ALT &sk LEFT_GUI &none                   &kp F10 &sk RIGHT_GUI &sk RIGHT_ALT &sk RIGHT_CONTROL &sk RIGHT_SHIFT &kp BACKSPACE
   &kp LSHFT &kp F7 &kp F5 &kp F3 &kp F1 &kp F9                                                &kp F8 &kp F12 &kp F2 &kp F4 &kp F6 &kp TILDE
   &kp ESC &mt LC(LS(LALT)) SPC  &sk LSHIFT                                                     &kp RET &kp BSPC &sl 4
                        >;
                };
                
         NUM {
                        bindings = <
   &kp TAB &kp NUMBER_7 &kp NUMBER_5 &kp NUMBER_3 &kp NUMBER_1 &kp NUMBER_9                    &kp NUMBER_8 &kp NUMBER_0 &kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_6 &kp BSPC
   &kp LCTRL &sk LEFT_SHIFT &sk LEFT_CONTROL &sk LEFT_ALT &sk LEFT_GUI &none                   &kp F10 &sk RIGHT_GUI &sk RIGHT_ALT &sk RIGHT_CONTROL &sk RIGHT_SHIFT &kp BACKSPACE
   &kp LSHFT &kp F7 &kp F5 &kp F3 &kp F1 &kp F9                                                &kp F8 &kp F12 &kp F2 &kp F4 &kp F6 &kp TILDE
   &kp ESC &mt LC(LS(LALT)) SPC  &sk LSHIFT                                                    &kp RET &kp BSPC &sl 4
                        >;
                };
        };
};
